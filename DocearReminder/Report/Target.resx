<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IA5kgJhlifP/Gff4erPBaQIAAAAASUVORK5CYII=
</value>
  </data>
</root>