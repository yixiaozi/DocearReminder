<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>