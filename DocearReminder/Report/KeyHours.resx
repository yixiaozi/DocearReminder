<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABSHAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAHARJREFUeJztnXmQVXl1x48OW8NEmgFlbay4sOO4/BdFlm4aojiEYt9E
        glousdgaaJokolZ0HE1S/DVlE7YeLBgnqMAMTNQ47EsyOjQjIpoGU0nUKQLK4gz7ze9732vyGvrde9/r
        +945597zrfpUUdDA9/c7v/Pevb/l/IhM2lXhGOH4qOMvHasd33Bsdux2HHGcdbRkuZzlusPLcj3n91t/
        7ueOw47vOzY5nsr+2/g/PpL9PyvK0D6TKfXq7BjlmOf4qmOn44Tjd/T/ScwFPBx37Mh6m5v12rkkPWEy
        JVz4Vh3jqHM0OV5x3CT+RC+Um1nvTdm2jCF7YjCZHlJfx8cc6x0/dLxB/MlbKm47XnZscHzcMbjj3Wcy
        6VInx4ccT1ImGe4Rf2JygvmGb1HmQ7BrB/rVZBKrQY7POvZQ28k3oy3XKDPp+BnHwKJ62mQSoj6UeczF
        Y/1d4k8ubaDPsIKx1DGgwL43mViEpP+84yBZ0sf9YfASZZ6iekeOhslUJn2AMu+xrxN/siSdG47vOGoc
        b4oSHJOpFOrnWOP4FfEnRVpB3693VAWHymSKT+9zbHfcIv4EMDIgFs843hsQN5OpQ8LS3V6yZTvpYOIQ
        S4r2emDqsLBmv9hxhvgHtlEYrzoWZWNoMhWkNztmOs4R/0A2OsYFx6cdj5DJFCI8NuLx8RTxD1wjXnC6
        Efsy3kwmUzua7Ggm/oFqlBYcUKolkymrd1NmXZl7YBrlBTs0UdPAlFJVUuZADjaWcA9GgwcsH+JkYk8y
        pUZ4z/+U4yLxD0BDBq9RZrXHlg4Trnc6fkT8A86QySHHUDIlTlgLxqkyO4prhIHzHOsdXciUCOGgji3r
        GYXyU8f7yaRWWO/Ft77GenqGDFDCbD3ZJiJ1Qq05nMnnHkBGMjjmeAeZVAhbeFHfnnvQGMniimMBmcSq
        B2WO6XIPFCPZbHV0J5MovctxmvgHh5EOsGUcS8omAcI1VfbIb5QbvBL8BZnYhF1bKMllxTcNLlAcBtvJ
        7YRhmYX3fdTY5x4AhgFwlwHGpKkM6k+ZG3W4g24YuWCzGS6AMZVQIx2/Jv5gG0Z7/LfjcTKVRNWOPxB/
        kA0jiKuUKS5jilHzyMpwG3rA9vPZZIpFOLtvM/2GNu44lpCpQ/ocWfIbesEy4TIyFSWs8XMH0DDi4Itk
        KkhfIf6gGUacfIlMkbSO+INlGKVgLZkC9QXiD5JhlJKVZGpXnyC7eNNIPhjjWNky5Qjr/Dbbb6QFLBHa
        PoGsxpHV7TPSBza21VDKhauZfk/8wTAMDlBTYDSlVDjV92viD4JhcHLB0ZdSJtRUO0H8nW8YEsDx9tTU
        E0D1FCvmYRht+R6lpLLQl4m/sw1DIn9DCdcUUrLc9+ijj3qTJ0/2GhoavG3btnknTpzwWlpavMuXL3s3
        b970wa/xe/izrVu3+j+Lv9OjRw92/0kjJfFAbqDIbSL1bhI+4z9gwACvrq7OO3r0qHf79m2vWN26dcs7
        cuSIt3LlSq9///7s7dJKSuOBCteJKzmOCY5Xib9z26Wmpsbbv3+/d+fOnaIHWT7h39y3b59XXV3N3k4t
        WDz8ewcSdfmIyBt78Hh48uTJ2AdZPh0/ftyrra1lb7dULB5t2EwJEe5T4+7MNuDRsqmpqWwD7UHt3bvX
        Gzx4MHs/SMHikZc5pFxVJOzWnoULF3rXrl1jG2ytunr1qjdv3jz2/uDG4hEI5szeTkqFNc2XiL8TfSoq
        KrxNmzZxj7OHtHHjRq9bt27s/WPxyEhgPA45HiGF+mvi7zyfyspK7/Dhw9xjK6/wLtq7d2/2frJ4ZCQw
        HvWkTB8gIWW8sexz+vTpogYCHguff/55b82aNd6UKVO8oUOHer169fI6d+7sg1/j9/Bn+JkXXnih6MdZ
        eOzXrx97f1k8RMYDufQ+UqJOjp8Qf6f5A6LQwXb37l1vz5493rRp07yuXbsW/H/i70yfPt2fWMK/VYia
        m5v9b0fufrN4iIwHrh7rTArUQPyd5b9jYvNHVN27d8/bvn27N3z48Ng8jBgxwtuxY4f/b0fVwYMHpb2D
        WjzkxGMVCdcQx+vE31EFTTCdOXPGGzNmTMm8jB071jt79mxkP42Njez9Z/EQGQ/k1rtIqN7k+Ffi7yRv
        zpw5kYOL9edy7BXHN+CGDRsi+1qwYAF7P1o8RMbjJcrkmjih0CF353hVVVWRJn7wPrh06dKy+8N+9CiP
        oFeuXPEGDhzI3p8WD5HxWEzCVOm4SPwd4+3atSvSYFu0aBGbx8WLF0cadM8++yx7f1o8RMbjNUdPEqR/
        JP5O8feSRxHHN82DrFixIpJXHIzh9mrxEBmPp0iIhpGQNf9jx46FBhA7vbh9toIz62HCphRunxYPkfFA
        JW1MurNrH/F3hv/JHCbMLnfv3p3dayuY7IoyGz1hwgR2rxYPkfHYTcyqIf5O8MH58SDhHa+US0vFMm7c
        uND3T+xo4/Zp8RAbj0nEJCxFnIpgsOTgOGlY8QhsKuH2mY+dO3cGekc1HEHbUi0esuKBXbcsy4KzijBb
        ElatWhUYMHyijxw5kt1nPrDbLWyb6vLly9l9WjzExmMalVk4nvjzGIzHAmrGBWn37t3sHsPAXvUgHTp0
        iN2jxUNsPH5GZS4pvrAEjSgKVItF0ccg4SAJt88wZs6cGdgGVL3VUN3W4sFG2S4bxbf/L8rQoEiErTVj
        B1cxp8jKDQ6chO2YE1y/zuLBzznKnMQtuRYzNC4v69atCwwSzo9ze4xK2Mx5fX09u0eLh+h4oP5mSYXZ
        xjMCGnofXBIRpNWrV7N7jAoGVJC2bNnC7tHiIToep6nEKwIfFdDINuAWmCChOgy3x6g88cQTgW3Bzjpu
        jxYP8fGopRLqxwIa2IYLFy4EBmnIkCHsHqMybNiwwLacP3+e3aPFQ3w8/oVKpMcd9wQ0sA2XLl0KDNJj
        jz3G7jEqffr0CWzLxYsX2T1aPFTE471UAn1bQMMeAssxQerSpQu7x6hgdjxIN27cYPdo8VARj20Us/qR
        kBN/D5KkAQfCxO0v6f5zUfwBgJOCb6MYtVZAo9olSY+cQHsCafefi+JXABBbAVEsK/xKQIPaJUmTTkB7
        Amn3n4vSScBWsDEoliXBagGNyQsKNARJ07IT0J5A2v3nErYMiDMP3B5D+DDFoJ0CGpKXsI0nuCGG22Mh
        aE8g7f5zWbt2bWBbBG4EepBnqIPq7bghoCF5aWhoCAySsOINoWhPIO3+c3nxxRcD26Lgy+UNRy/qgP5K
        QCMCmTRpUmCQcJ+chsMnrWhPIO3+W8FhoOvXrwe2ZeLEiew+I/Bp6oAOCmhAIKgpF7YUiLvhuH1GRXsC
        afffyqxZswLbIfA4cD5+REWqv+OOgAaEEnbnHIo7cHuMivYE0u6/Fbw6Bgl3BnJ7jAhyuC8VoaUCzEei
        rq4uMFgoQTVq1Ch2n1HQnkDa/QNcIhpWEmzZsmXsPgvgc1SEjgowHgncOR9WhBK3wnL7jIL2BNLuHzz3
        3HOBbUBR0L59+7L7LIADVKAGOe4KMB6Zffv2BQYNTwG4FZbbZxjaE0i7f9T8D5OmoiZZkMsDqAB9ToDp
        gqiurg4NHC59kD5xoz2BNPtHPcNz586FtgF3B3B7LYKCVgP2CDBcMGHVaCHpmzc0J5B2/2GbyiBBV4MV
        yncporo4rgkwXDBYl40iXAnN7TUfmhNIs3+UKosiQdeCFcpVyuR2qMRc91UMYRM4EOYDcCU0t9f20JpA
        mv0vWbIk0vXgWiaSAxhHEfT3AowWzaBBg/zdf1E+BHAlNLffB9GYQJr945s/SvKjnDmuPOP220G+ThEk
        qupvMcyePTs0oK1qamoSNTGoLYG0+q+oqPCvJo+q+fPns3uOAVQNDlRfASZjoZDgYnVAysyulgTS7B/v
        8VFm+1v19NNPs3uOCdT0DKwUNF2AyVjAJzzub4sqPAbiVljuSys1JJBW/6NHj440R5SrAwcO+AeDuPs1
        RqZSgP5BgMHYqKys9JqbmwsKOLaAYqPHjBkzWAIvOYE0+kcMcbAHe/ujvOvn6tSpU17Pnj3Z+zRmnqIA
        nRRgMFZwj3uhHwKtwt1wuB4KhSFQHQbXRqPGYCkLjUpLIC3+ERPEBjGaOnWqHzOc5w870ptPSH6MHe7+
        LAHY4t+uKihTTZTbYOzgSQCnt0ymKMJjfwK/+VtBgZ9u7X0AfFiAuZKBR8HGxkbusWUSLkz4Jeydvz0+
        2E7+U50AYyVn7ty5/pquyZQrjAksH3OPzzKxgtrRMwKMlQUcH8b6v8kEoWBMVVUV+7gsI1upHTULMFZW
        ampq/BteTekUKkkp3tvfEX5CD6gzJXQCMArjx4/3l4nCioqY9AvFPLDMK2XjFxOYCOxEORotwBQ7WPZZ
        vny5v4EorNCoSY8QS6wCoYyXsko+pWQE5Wi+AEOiwPmA2tpar76+3tu8ebN/DrylpcW/i9A+HOQJMUFs
        ECO81iFmiB2OiKNyNPd4EshsytFXBRgyyDYCGWXjK5Qj0dd/pQntCaTdf4r4NuUocVuAtaI9gbT7TxFt
        tgS/JsCQQfoTSLv/FPEbyqoHZc4JcxsySH8CafefIpDz/pmAkQLMGFm0J5B2/yljqIM+IsCIkUV7Amn3
        nzImO+iTAowYWbQnkHb/KWOxg+oFGDGyaE8g7f5TxioHfUOAESOL9gTS7j9lPOmgzQKMGFm0J5B2/ylj
        o4N2CzBiZNGeQNr9pwz/vsCjAowYWbQnkHb/KeOQQ/9NQElCewJp958yXnVQiwAjRhbtCaTdf8r4pYP+
        S4ARI4v2BNLuP2X8p8MOAklCewJp958yfuugPwgwYmTRnkDa/aeMyw56XYARI4v2BNLuP2X80UF3BBgx
        smhPIO3+UwZy3z4AJKE9gbT7Txn+B4C9AghCewJp958y/FcAmwQUhPYE0u4/ZfiTgLYMKAjtCaTdf8rw
        lwFtI5AgtCeQdv8pw98IZFuBBaE9gbT7Txn+VmA7DCQI7Qmk3X/K8A8DHRFgxMiiPYG0+08ZBx30fQFG
        jCzaE0i7/5Sxy0GbBBgxsmhPIO3+U0ajg74uwIiRRXsCafefMnArOK0WYMTIoj2BtPtPGSsdtESAESOL
        9gTS7j9lfMJhV4NJQnsCafefMvyrwUYIMGJk0Z5A2v2nDP9y0Aqy68HFoD2BtPtPEfevB4fsQJAQtCeQ
        dv8p4n8oRycEGDJIfwJp958icCHQfe0UYMgg/Qmk3X+K2E45+jsBhgzSn0Da/aeIL1OO5gowJIpHH33U
        mzx5stfQ0OBt27bNO3HihNfS0uJdvnzZu3nzZuhAN5VXiAligxghVlu3bvVjhxj26NGDfTwJZCblaJQA
        Q+wMGDDAq6ur844ePerdvn2be0ybYtKtW7e8I0eOeCtXrvT69+/PPs6EMIxy1MlxQ4ApFmpqarz9+/d7
        d+7c4R6rphILMd63b59XXV3NPu4YecPxCD2gVwQYKyt4PDx58iT3mDQx6fjx415tbS37OGTgZWpH2wQY
        Kwt41G9qauIefyYh2rt3rzd48GD2cVlGNlM7qhNgrOQsXLjQu3btGveYMwnT1atXvXnz5rGPzzKxgtrR
        GAHGSkZFRYW3adMm7nFmEq6NGzd63bp1Yx+vJebP2sl/6koJnQisrKz0Dh8+zD22TEqEuYHevXuzj9sS
        gRy/fwbgQR0XYDBWsOxz+vTpogYCHguff/55b82aNd6UKVO8oUOHer169fI6d+5cMr9h4u5Pqf4RE8QG
        MUKsELMXXnih6Nc9jJl+/fqx92cJOEwB+qYAg7GBAVFo8t+9e9fbs2ePN23aNK9r165l98yVQEn1jxhO
        nz7dn+hDbAtRc3Oz//TI3acx8yQFaJoAg7GAd35s/oiqe/fuedu3b/eGDx/O6ltaAiXJ/4gRI7wdO3b4
        sY6qgwcPJm1O4GMUoLcJMBgLhUz4nTlzxhszZgy7ZyA5gZLif+zYsd7Zs2cjj4/GxkZ2zzGBGgBvpRD9
        TIDRDjFnzpzIwcV+AEl7xTUkUBL84wlxw4YNkcfJggUL2D3HwCmKoG8IMFo0VVVVkSZ+8D64dOlSdr8P
        oiWBkuIf5wOivBJcuXLFGzhwILvfDvI1iqBqAUaLZteuXZGSf9GiRexe20NbAiXB/+LFiyN9CDz77LPs
        XjvIWIqgLo6rAswWDPb2R5HEb/5WNCZQEvyvWLEi0tjBwTFur0VyxdGZImq3AMMFc+zYsdAAYqcXt88g
        tCZQEvyjhkCYsEmI22eR+PcARtVnBRguCHwyhwmz/d27d2f3GoTmBNLuH5PBUVYHJkyYwO61CD5FBWig
        464A05HBef4g4R1PylJfEJoTKAn+x40bFzofgB2G3D4LBLncnwrUYQHGI4HjvWHFPLDJh9tnFLQnkHb/
        YOfOnYFtQLUoZduEf0xF6AsCjEdi1apVgQHDJ/rIkSPZfUZBewJp9w+wGzRs2/Dy5cvZfRbAZ6gI9XPc
        EWA+FNTwC9Lu3bvZPUZFewJp998Kzg4E6dChQ+weI4Icxg7fovSSgAYEguq9KPoYJBzs4fYZFe0JpN1/
        KzNnzgxsB6oQS9pBGsAPqAMSvxoQtvaPHVwcp/qKRXsCafffCg4Ahe0oVVJPcAl1QL0pU0GUuxF5Wbdu
        XWCQcJ6f22MhaE8g7f5zCVtZqq+vZ/cYwuuOXtRB7RDQkLzg0o4grV69mt1jIWhPIO3+c0GCB2nLli3s
        HkNAod8Oa4KAhuQFt8AECdVhuD0WgvYE0u4/lyeeeCKwLdh5yu0xBNT57LDe5PilgMa0y4ULFwKDNGTI
        EHaPhaA9gbT7z2XYsGGBbTl//jy7xwDOUSZ3Y1G9gAa1y6VLlwKD9Nhjj7F7LATtCaTdfy59+vQJbMvF
        ixfZPQaAMv+xqa/jloBGPUTYRZ1dunRh91gI2hNIu/9csHoUpBs3brB7zMNN6sDafz49I6BhD5GkDwDF
        A87iIYstVAK9hzI1xbgb14YkvQIof+S0eMjhcSqRfiigcW1I0iSg8kkni4cM9lMJNVlAA9uAAg1B0rQM
        GLbshDMP3B4tHuLjgZJ+JdUpAY28T9hGINwQw+0xKmvXrg1si4KNJxYPXpopxqW/fFokoKH3aWhoCAyS
        puINL774ovrksXiwMo/KoEccv2BoXLtMmjQpMEi430/DYSAcPrl+/XpgWyZOnMju0+IhNh7Y+IPcLIvm
        l6FBkUCNv7ClJ9wNx+0zjFmzZgW2QcvxU4sHGzOpjHozZd43uBvtE3YHIIo7cHsMA4/GQcIdddweLR5i
        4/EqZXKyrJoRg/FYqKurCwwWSoKNGjWK3Wc+cGllWAmqZcuWsfu0eIiNx1RiEGYbXynCbOz0798/tCgo
        boXl9pmP5557LtA7ilD27duX3afFQ2Q8XqYyzPznk5hrxPbt2xcYNHzr4FZYbp8PghrzYdJW1MTiUVYm
        ErP2EH8neNXV1aGBw6UPkiZuUM/w3Llzob5Rq57bq8VDZDwKuu2nVHqn4wbxd0ZodWBI0uaNsE0zkOKr
        qCwepQUn/t5NQiTiSnGsy0YRroTm9opSZVGk9Boqi0fp+SoJ0p84fkv8nRI6gQPh/RNXQnN5XLJkSaTr
        qCVPlFk8WPmd4y0kTIuJv2O8QYMG+bvNogw6XAldbn/4poky2FDOHFeecfenxUNkPBaSQGEpQsRx4dmz
        Z4cGtFVNTU1lmYiqqKjwryaPqvnz57P3o8VDZDxwzx/bsl+Y/tRxnfg7qaDgYja6lDO7eG+MMrvcqqef
        fpq9/yweIuPxR8pMuovWGuLvKP8THve3RRUeA3ErbJyXiI4ePTrSO3CuDhw44B9E4e4/i4fIeKwkBepE
        md1J3J3lVVZWes3NzQUFHFtAsdFjxowZRQUefwcHSbCXPMq7Za5OnTrl9ezZk73fLB4i44Fdt8gtFXo/
        CakijHvcCx10rcLdcLgeCoUhUB0G10ajph0KWwL8Gr83depU/2dwfjzsCGnQYFN257zFo3xgzb9kdf5K
        pQbi7zgffPPg9JZU4TFT0DeNxUNePFaTQuF4ImYsuTvPB4+CjY2N3GPrIWGCSdA7psVDXjwOUhkLfcSt
        QY5LxN+J95k7d66/pssteMDyGHd/cGPxCOT3jsGkXGLqBrSC46pYb+YSCmJUVVWx94MULB55mU0J0Vbi
        78yHqKmp8W94LZdQKUfQXnJxWDza0EgJUjfHT4i/U9tl/Pjx/jJRWBGLYoTiEVjGEnSEVDwWD3/Jr4IS
        prc7/pf4OzcvWPZZvny5v2ElrLBlkPB3McuNslGCKseoI6XxwJwZdtQmUqhecof4OzkU7Eevra316uvr
        vc2bN/vnwFtaWvy77zCgAH6N38NjK34GP4sjsKiMy+0/aaQkHncpc/tWovVF4u9ow5DIWkqBsD/g+8Tf
        2YYhiX8mwaf84hYmOI4Tf6cbhgT+3dGDUqa3Ov6D+DvfMDg57+hLKdVwx2XiD4JhcIAZ/2GUco0lIVWF
        DaOM4LQs7tUwUWbLo4rlQcOIAYx1bJE35WgRZdZBuYNjGKXknuOTZGpXnyf+ABlGKVlOpkChg7iDZBil
        oJ5MkfQl4g+WYcTJejIVJBHVhQ0jBv6WTEXpM2QTg4ZeMOG3lEwd0nzHbeIPpmEUApb6cF2eKQZhnwBK
        I3MH1TCigI1tts4fsz7ouEj8wTWMILC1fRyZSqJ3OX5J/EE2jPbAwZ7U7+0vtfo4jhB/sA0jl5OU4lN9
        5VZ3x3eJP+iGAVDMI3FFPKUL1VOwV8AOERlcYJnvScpUuTIxabzjNeIfDEa6QIXrSWQSoSrHvxH/oDDS
        wU8pwaW7tQrvYJuJf3AYyQY39uCiG5NQTSdhF5IaieAPjrlkUiG8ErxE/IPGSAa45h43XZsUCasEOIhh
        W4iNYsEZlPVks/yq9T4SfDGpIRbU6n+cTIlQJ8o8DVwj/oFlyOZ1yuwveYRMidM7HD8g/kFmyOSAYwiZ
        Ei3MDeCc9u+If8AZMvit4+NkSpVwF9t6xxvEPwANHnA5xwbHW8iUWuGI8XeIfzAa5WWv451kMmVVQ7Za
        kAYwuz+BTKY8wgcB9npzD1QjXn7mmEmZOSCTKVAYJB9zNBP/wDU6xs8pM8Fny3qmgoVBs4Dsg0Ajrzjm
        ke3iM8WkD1Fm4ghFILgHt5EflIvD05s96ptKovc4tpGdMZAEYrHVMTp/2EymeNXL8WnHq8SfAGnlHGW2
        7b4tJFYmU0n1Ace3HNeJPymSDi7dwL4NrNbYY75JlFqfCn5EVqw0TtCXP3R80lEZORomE6N6U2b5CROH
        drdh4eBSWEzo4RRnvwL73mQSpQGUeTLAXQZXiT+5pHLFscvxKUf/onraZBKuzpQpZf51sv0F4BRlauuP
        y/aNyZQq4SQaJrTWU+Y9N8mnE/Eq9DJlTuBhW+5bO959JlOyhJLT2HS0gjJr2zighJlv7uQtlDey3rdk
        24LbnbvG100mU3qEkmbDHbMdX3F823HU8RviT/TfZL1sd3zZMSvrtVNJesJkMrURnhhwJfWfU6bSUR1l
        3qn/yfE9xyHKbFZqyXKRMnfY59ZHvJb9vYs5P/dq9u9+L/tvfS37b3/CMTn7f9oFGcr1f6mVYH/Ftw//
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>